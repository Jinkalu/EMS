services:

  # Config Server
  config-server:
    build:
      context: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - ems-network

  # Discovery (Eureka)
  discovery-server:
    build:
      context: ./discovery-server
    container_name: discovery-server
    ports:
      - "8762:8762"
    networks:
      - ems-network
    depends_on:
      - config-server
#    depends_on:
#      config-server:
#        condition: service_healthy

  # Kafka and Zookeeper (using official images)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ems-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
#    depends_on:
#      zookeeper:
#        condition: service_healthy
    networks:
      - ems-network

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: peer-to-peer
    ports:
      - "5434:5432"  # exposes port on host
    volumes:
      - pgdata:/var/lib/postgresql/data  # persist DB data
    networks:
      - ems-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8086:8080"
    networks:
      - ems-network
    depends_on:
      - discovery-server
      - config-server
#    depends_on:
#      discovery-server:
#        condition: service_healthy
#      config-server:
#        condition: service_healthy


  # Auth Service
  auth-service:
    build:
      context: ./auth-service
    container_name: auth-service
    ports:
      - "8081:8081"
    networks:
      - ems-network
    depends_on:
      - discovery-server
      - config-server
      - kafka
      - postgres
#    depends_on:
#      discovery-server:
#        condition: service_healthy
#      config-server:
#        condition: service_healthy
#      kafka:
#        condition: service_healthy
#      postgres:
#        condition: service_healthy

  # Employee Service
  employee-service:
    build:
      context: ./employee-service
    container_name: employee-service
    ports:
      - "8082:8082"
    networks:
      - ems-network
    depends_on:
      - discovery-server
      - config-server
      - kafka
      - postgres
#    depends_on:
#      discovery-server:
#        condition: service_healthy
#      config-server:
#        condition: service_healthy
#      kafka:
#        condition: service_healthy
#      postgres:
#        condition: service_healthy

networks:
  ems-network:
    driver: bridge

volumes:
  pgdata: